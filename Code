# Code for "The Burr distribution as a model for the delay between key events in an individualâ€™s infection history"

# cumulative density function (c.d.f) of type III Burr distribution
pburr3 <- function(x,c,k,s){(1+(x/s)^(-c))^(-k)}
# probability density function (p.d.f) of type III Burr distribution
dburr3 <- function(x,c,k,s){(c*k/s)*(x/s)^(-c-1)*(1+(x/s)^(-c))^(-k-1)}
# c.d.f of type X Burr distribution
pburr10 <- function(x,c,k){(1-exp(-(x/c)^(2)))^(k)}
# p.d.f of type X Burr distribution
dburr10 <- function(x,c,k){2*k*x*c^(-2)*exp(-(x/c)^(2))*(1-exp(-(x/c)^(2)))^(k-1)}
# c.d.f of type XII Burr distribution
pburr12 <- function(x,c,k,s){1-(1+(x/s)^(c))^(1-k)}
# p.d.f of type XII Burr distribution
dburr12 <- function(x,c,k,s){c*(k-1)*s^(-1)*(1+(x/s)^(c))^(-k)*(x/s)^(c-1)}
# c.d.f of our derived Burr distribution
pdburr <- function(x,a,b,T){(1+(T/x)^(a*b)*exp(a*(T-x)))^(-1)}
# c.d.f of our derived Burr distribution
ddburr <- function(x,a,b,T){a*(x+b)*(T/x)^(a*b)*exp(a*(T-x))/(x*(1+(T/x)^(a*b)*exp(a*(T-x)))^2)}


# incubation period data for legionnaires' disease, anthrax, four groups of salmonellosis data and five groups of campylobacteriosis data
legionnaires <- c(1,1,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,11,11,11,12,12,13,15,16)
anthrax <- c(6,6,6,7,8,5,7,7,8,9,4,9,9,6,10,11,12,9,10,10,11,12,10,11,12,13,10,12,13,14,14,14,15,15,15,20,21,21,22,15,17,23,27,29,27,25,34,39,37,42,13,14,34,37,38,41,42,45)
salm1 <- c(7,12,12,14,15,16,16,16,16,17,18,18,18,18,19,20,20,20,20,21,22,27,27,27,29,29,30,30,31,31,34,9,9,13,14,16,16,18,18,20,21,22,23,23,24,24,24,25,25,25,27,27,29,29,34)
salm2 <- c(10,14,16,17,19,19,27,9,9,10,11,11,12,16,16,16,16,16,17,17,17,19,19,20,21,21,22,22,22,22,23,24,33,2,6,7,7,7,8,9,10,10,10,10,11,11,12,13,13,13,13,14,14,15,16,16,17,19,20,20,20,20,21,21,21,21,28,41)
salm3 <- c(3,4,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,12,13,14,14,15,16,19,19,20,21,21,21,21,21,21,22,23,26,27,27,27,28,28,28,29,29,41,6,6,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,11,11,11,12,13,13,13,13,17,21)
salm4 <- c(3,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,10,10,11,11,11,11,11,12,12,14,14,15,15,15,16,16,17,18,19,19,21,21,23,24,25,26,29,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,9,10,11,12)
camp1  <- c(1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,5,5,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,5,6,6,7,7,8,9,10,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,5,1,1,1,1,1,2,2,2,2,2,2,2,3,3,4,1,1,2,2,4,1,1,1,1,1,1,1,2,2,3,3,3,4,5,6,1,2,2,2,2,3,3,3,3,5,1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,4,6,6,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,8,4)
camp2 <- c(1,1,2,2,2,2,3,3,3,3,3,4,4,5,6,7,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,5,5,5,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,5,5,6,6,1,2,2,2,3,3,4,4,5,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,10,10,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,9,9,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,7,7,7,9,9,9,2)
camp3 <- c(2,2,3,3,4,4,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5)
camp4 <- c(1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,9,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,5,5,5,7,2,2,3,3,3,3,3,3,3,3,3,4,4,4,5,6,7,8,8,10,11,11,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,6,6,7,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,7,7,7,8,8,8,8)
camp5 <- c(1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,9,14,2,3,3,3,4,5,5,5,5,5,6,1,2,2,2,2,2,2,2,2,2,3,3,3,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,7,8,8,8,8,9,10,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,7,7,7,7,7,7,8,8,8,8,8)

# results for table 2 of analysis of data with standard likelihood methods using fitdist function
library("fitdistrplus")
# each line is model fitting for fitting gamma distribution, types III, X, XII and derived Burr distributions (in that order)
# in the below code, "data" means one of the incubation period datasets in the list above
Model_gamma <- fitdist(data,"gamma",method="mle")
Model_burrIII <- fitdist(data,"burr3",method="mle",start=list(c=1,k=1,s=1))
Model_burrX <- fitdist(data,"burr10",method="mle",start=list(c=1,k=1))
Model_burrXII <- fitdist(data,"burr12",method="mle",start=list(c=2,k=4,s=10))
Model_burrDerived <- fitdist(data,"dburr",method="mle",start=list(a=1,b=1,T=1))
# using summary on these outputs "Model_" gives the likelihood, AIC provided in table 2 of the paper
# the likelihood is used for estimating the Bayes factor also obtained in table 2
# the parameter estimates in table 3 are obtained from the summary of these outputs



# code for producing figure 2
hist(MelbourneIP,breaks=seq(0,20,by=1),xlab="Time in Days",ylab="Density",main="Melbourne Data with Model Fits")
lines(seq(0,20,by=0.01),length(MelbourneIP)*dburr3(seq(0,20,by=0.01),c=5.664,k=0.444,s=7.690),col=2)
lines(seq(0,20,by=0.01),length(MelbourneIP)*dburr10(seq(0,20,by=0.01),k=1.525,c=6.054),col=3)
lines(seq(0,20,by=0.01),length(MelbourneIP)*dburr12(seq(0,20,by=0.01),c=2.955,k=4.451,s=10.031),col=4)
lines(seq(0,20,by=0.01),length(MelbourneIP)*ddburr(seq(0,20,by=0.01),a=0.365,b=4.721,T=6.050),col=7)
lines(seq(0,20,by=0.01),length(MelbourneIP)*dgamma(seq(0,20,by=0.01),shape=4.963,rate=0.785),col=8)
lines(seq(0,20,by=0.01),length(MelbourneIP)*dlnorm(seq(0,20,by=0.01),meanlog=1.740,sdlog=0.488),col=9)
lines(seq(0,20,by=0.01),length(MelbourneIP)*dweibull(seq(0,20,by=0.01),shape=2.447,scale=7.129),col=5)
legend(x="topright",legend=c("Type III", "Type X", "Type XII", "Derived", "Gamma", "Lognormal", "Weibull"),lty=c(1,1,1,1,1,1,1),col=c(2,3,4,7,8,9,5),lwd=2)

# code for producing figure 3
plot(seq(0,20,by=0.01),-log(1-pburr10(seq(0,20,by=0.01),k=1.525,c=6.054)),type="l",col=3,main="Burr Distributions Cumulative Hazard",xlab="Time in Days",ylab="Cumulative Hazard")
lines(seq(0,20,by=0.01),-log(1-pburr3(seq(0,20,by=0.01),c=5.664,k=0.444,s=7.690)),type="l",col=2)
lines(seq(0,20,by=0.01),-log(1-pburr12(seq(0,20,by=0.01),c=2.955,k=4.448,s=10.027)),type="l",col=4)
lines(seq(0,20,by=0.01),-log(1-pdburr(seq(0,20,by=0.01),a=0.365,b=4.721,T=6.050)),type="l",col=7)
lines(seq(0,20,by=0.01),-log(1-pgamma(seq(0,20,by=0.01),shape=4.963,rate=0.785)),type="l",col=8)
lines(seq(0,20,by=0.01),-log(1-plnorm(seq(0,20,by=0.01),meanlog=1.740,sdlog=0.488)),type="l",col=9)
lines(seq(0,20,by=0.01),-log(1-pweibull(seq(0,20,by=0.01),shape=2.447,scale=7.129)),type="l",col=5)
legend(x="topleft",legend=c("Type III", "Type X", "Type XII", "Derived", "Gamma", "Lognormal", "Weibull"),lty=c(1,1,1,1,1,1,1),col=c(2,3,4,7,8,9,5),lwd=2)

# code for producing DI likelihood on legionnaires' disease dataset
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(legionnaires)){
		my.sum=my.sum+fun01(a,b,legionnaires[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(legionnaires)){
		my.sum=my.sum+fun01(c,k,t,legionnaires[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,100,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+4

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(legionnaires)){
		my.sum=my.sum+fun01(c,k,legionnaires[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(0.2,0.9),upper=c(9,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(legionnaires)){
		my.sum=my.sum+fun01(c,k,s,legionnaires[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.9,1),upper=c(9,50,50),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(legionnaires)){
		my.sum=my.sum+fun01(a,b,T,legionnaires[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.1,0.1,1),upper=c(9,50,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6
# Output for these DI log likelihood fitting provides values given in tables 4 and 5

# code for bootstrapping confidence intervals of the mean for each model, for table 6
# code for gamma, means1 is model from using normal data, means2 is model from considering the DI approach
means1 <- c()
for (j in 1:10000){
print(j)
samp <- rgamma(n=1000,shape=4.963,rate=0.785)
means1 <- append(means1,mean(samp))}
means2 <- c()
for (j in 1:10000){
print(j)
samp <- rgamma(n=1000,shape=3.479,rate=0.653)
means2 <- append(means2,mean(samp))}

# code for Burr III, means1 is model from using normal data, means2 is model from considering the DI approach
means1 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=100000)
samp <- c()
for (i in 1:100000){
samp <- append(samp,uniroot(function(x) pburr3(x,c=5.475,k=7.229,s=0.334)-u[i],lower=0,upper=1000)$root)
print(i)}
means1 <- append(means1,mean(samp))}

# code for Burr X, means1 is model from using normal data, means2 is model from considering the DI approach
means1 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=1000)
samp <- c()
for (i in 1:1000){
samp <- append(samp,uniroot(function(x) pburr10(x,c=6.054,k=1.525)-u[i],lower=0,upper=1000)$root)}
means1 <- append(means1,mean(samp))}
means2 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=1000)
samp <- c()
for (i in 1:1000){
samp <- append(samp,uniroot(function(x) pburr10(x,c=5.848,k=1.065)-u[i],lower=0,upper=1000)$root)}
means2 <- append(means2,mean(samp))}

# Code for Burr XII, means1 is model from using normal data, means2 is model from considering the DI approach
means1 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=1000)
samp <- c()
for (i in 1:1000){
samp <- append(samp,uniroot(function(x) pburr12(x,c=2.955,k=4.451,s=10.031)-u[i],lower=0,upper=1000)$root)}
means1 <- append(means1,mean(samp))}
means2 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=10000)
samp <- c()
for (i in 1:10000){
samp <- append(samp,uniroot(function(x) pburr12(x,c=2.249,k=8.643,s=14.194)-u[i],lower=0,upper=1000)$root)}
means2 <- append(means2,mean(samp))}

# Code for derived Burr, means1 is model from using normal data, means2 is model from considering the DI approach
means1 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=1000)
samp <- c()
for (i in 1:1000){
samp <- append(samp,uniroot(function(x) pdburr(x,a=0.365,b=4.721,T=6.05)-u[i],lower=0,upper=1000)$root)}
means1 <- append(means1,mean(samp))}
means2 <- c()
for (j in 1:10000){
print(j)
u <- runif(n=1000)
samp <- c()
for (i in 1:1000){
samp <- append(samp,uniroot(function(x) pdburr(x,a=0.474,b=1.857,T=5.075)-u[i],lower=0,upper=1000)$root)}
means2 <- append(means2,mean(samp))}


# code for plotting likelihood fitted models and DI likelihood fitted curve models to legionnaires' data in figure 4
par(mfrow=c(3,2))
x <- seq(0,20,by=0.01)
# Gamma
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
values <- c()
for (i in 1:20){
values <- append(values,fun01(a=3.479,b=0.653,i))}
y <- seq(0,19)
hist(MelbourneIP,breaks=seq(0,20,by=1),main="Gamma Distributed Models",xlab="Time in Days",ylab="Density")
lines(x,length(MelbourneIP)*dgamma(x,shape=4.962,rate=0.785),xlim=c(0,20),col="red")
lines(y,length(MelbourneIP)*values,type="s",col=7)
# Burr Type III
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
values <- c()
for (i in 1:20){
values <- append(values,fun01(c=4.388,k=0.5,t=6.416,i))}
y <- seq(0,19)
hist(MelbourneIP,breaks=seq(0,20,by=1),main="Burr Type III Distributed Models",xlab="Time in Days",ylab="Density")
lines(x,length(MelbourneIP)*dburr3(x,5.320,0.5,7.448),xlim=c(0,20),col="red")
lines(y,length(MelbourneIP)*values,type="s",col=7)
# Burr Type X
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
values <- c()
for (i in 1:20){
values <- append(values,fun01(c=5.848319,k=1.064960,i))}
y <- seq(0,19)
hist(MelbourneIP,breaks=seq(0,20,by=1),main="Burr Type X Distributed Models",xlab="Time in Days",ylab="Density")
lines(x,length(MelbourneIP)*dburr10(c=6.054270,k=1.525209,x),xlim=c(0,20),col="red")
lines(y,length(MelbourneIP)*values,type="s",col=7)
# Burr Type XII
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
values <- c()
for (i in 1:20){
values <- append(values,fun01(c=2.249,k=8.643,s=14.194,i))}
y <- seq(0,19)
hist(MelbourneIP,breaks=seq(0,20,by=1),main="Burr Type XII Distributed Models",xlab="Time in Days",ylab="Density")
lines(x,length(MelbourneIP)*dburr12(c=2.955,k=4.448,s=10.027,x),xlim=c(0,20),col="red")
lines(y,length(MelbourneIP)*values,type="s",col=7)
# Derived Burr
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
values <- c()
for (i in 1:20){
values <- append(values,fun01(a=0.4738445,b=1.8574441,T=5.0750177,i))}
y <- seq(0,19)
hist(MelbourneIP,breaks=seq(0,20,by=1),main="Derived Burr Distributed Models",xlab="Time in Days",ylab="Density")
lines(x,length(MelbourneIP)*ddburr(a=0.365,b=4.733,T=6.050,x),xlim=c(0,20),col="red")
lines(y,length(MelbourneIP)*values,type="s",col=7)
plot.new()
legend("center",legend=c("Original","DI"),col=c("red",7),lwd = 5, xpd = FALSE, horiz = TRUE, cex = 1, seg.len=1, bty = 'n')

# for producing the results in table 6 we use the DI likelihood fitting methods coded above with the other disease data, instead of the "MelbourneIP" legionella data



# here we now provide the code to fit the DI likelihood methods to each other disease datasets

# we first analyse anthrax dataset
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(anthrax)){
		my.sum=my.sum+fun01(a,b,anthrax[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(anthrax)){
		my.sum=my.sum+fun01(c,k,t,anthrax[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,100,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(anthrax)){
		my.sum=my.sum+fun01(c,k,anthrax[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(5,0.5),upper=c(25,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(anthrax)){
		my.sum=my.sum+fun01(c,k,s,anthrax[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.5,1),upper=c(9,50,50),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(anthrax)){
		my.sum=my.sum+fun01(a,b,T,anthrax[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.01,100,1),upper=c(0.1,150,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the first salmonella dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(salm1)){
		my.sum=my.sum+fun01(a,b,salm1[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(salm1)){
		my.sum=my.sum+fun01(c,k,t,salm1[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,100,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(salm1)){
		my.sum=my.sum+fun01(c,k,salm1[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(5,0.5),upper=c(25,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(salm1)){
		my.sum=my.sum+fun01(c,k,s,salm1[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(3,3,3),upper=c(10,10000,1000),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(salm1)){
		my.sum=my.sum+fun01(a,b,T,salm1[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.01,3,1),upper=c(0.5,75,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the second salmonella dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(salm2)){
		my.sum=my.sum+fun01(a,b,salm2[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(salm2)){
		my.sum=my.sum+fun01(c,k,t,salm2[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,100,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(salm2)){
		my.sum=my.sum+fun01(c,k,salm2[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(5,0.5),upper=c(25,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(salm2)){
		my.sum=my.sum+fun01(c,k,s,salm2[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.5,1),upper=c(9,100,100),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(salm2)){
		my.sum=my.sum+fun01(a,b,T,salm2[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.01,3,1),upper=c(0.5,75,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the third salmonella dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(salm3)){
		my.sum=my.sum+fun01(a,b,salm3[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(salm3)){
		my.sum=my.sum+fun01(c,k,t,salm3[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,100,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(salm3)){
		my.sum=my.sum+fun01(c,k,salm3[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(5,0.5),upper=c(25,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(salm3)){
		my.sum=my.sum+fun01(c,k,s,salm3[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,5),upper=c(9,75,75),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(salm3)){
		my.sum=my.sum+fun01(a,b,T,salm3[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.01,3,1),upper=c(0.5,1000,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the fourth salmonella dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(salm4)){
		my.sum=my.sum+fun01(a,b,salm4[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(salm4)){
		my.sum=my.sum+fun01(c,k,t,salm4[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(salm4)){
		my.sum=my.sum+fun01(c,k,salm4[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(5,0.5),upper=c(25,50,50),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(salm4)){
		my.sum=my.sum+fun01(c,k,s,salm4[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(25,75,75),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(salm4)){
		my.sum=my.sum+fun01(a,b,T,salm4[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.01,3,1),upper=c(0.5,1000,50),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the first campylobacteriosis dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(camp1)){
		my.sum=my.sum+fun01(a,b,camp1[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(camp1)){
		my.sum=my.sum+fun01(c,k,t,camp1[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(camp1)){
		my.sum=my.sum+fun01(c,k,camp1[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(2,0.4),upper=c(10,10),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(camp1)){
		my.sum=my.sum+fun01(c,k,s,camp1[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(9,75,75),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(camp1)){
		my.sum=my.sum+fun01(a,b,T,camp1[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.5,1,1),upper=c(2,3,3),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the second campylobacteriosis dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(camp2)){
		my.sum=my.sum+fun01(a,b,camp2[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(camp2)){
		my.sum=my.sum+fun01(c,k,t,camp2[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(camp2)){
		my.sum=my.sum+fun01(c,k,camp2[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(2,0.4),upper=c(10,10),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(camp2)){
		my.sum=my.sum+fun01(c,k,s,camp2[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(9,75,75),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(camp2)){
		my.sum=my.sum+fun01(a,b,T,camp2[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.2,1,1),upper=c(2,10,5),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the third campylobacteriosis dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(camp3)){
		my.sum=my.sum+fun01(a,b,camp3[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(camp3)){
		my.sum=my.sum+fun01(c,k,t,camp3[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(camp3)){
		my.sum=my.sum+fun01(c,k,camp3[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(2,0.4),upper=c(10,10),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(camp3)){
		my.sum=my.sum+fun01(c,k,s,camp3[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(9,1500,150),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(camp3)){
		my.sum=my.sum+fun01(a,b,T,camp3[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.2,1,1),upper=c(2,10,5),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the fourth campylobacteriosis dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(camp4)){
		my.sum=my.sum+fun01(a,b,camp4[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(camp4)){
		my.sum=my.sum+fun01(c,k,t,camp4[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(camp4)){
		my.sum=my.sum+fun01(c,k,camp4[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(2,0.4),upper=c(10,10),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(camp4)){
		my.sum=my.sum+fun01(c,k,s,camp4[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(9,150,150),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(camp4)){
		my.sum=my.sum+fun01(a,b,T,camp4[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.2,1,1),upper=c(2,200,5),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6

# we analyse the fifth campylobacteriosis dataset
# code for producing DI likelihood
# code for the DI gamma model
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.1 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,S,x,y){ifelse(y-x>0,b^(a)*(y-x)^(a-1)*exp(-b*(y-x))/gamma(a),0)}
fun01.2 <- function(a,b,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,S){ifelse(S!=1,fun01.2(a,b,S),fun01.1(a,b,S))}
likelihood <- function(z){
	a <- z[1]
	b <- z[2]
	for (i in 1:length(camp5)){
		my.sum=my.sum+fun01(a,b,camp5[i])
	} 
	return(my.sum)
}
result <- optim(c(a=1,b=1),lower=c(0.1,0.1),upper=c(15,15),likelihood,control = list(fnscale = -1))
# gamma parameters
result$par
# gamma DI log likelihood
result$value
# gamma DI AIC
result$value*-2+4

# code for DI Burr III model
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.1 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,t,S,x,y){ifelse(y-x>0,c*k*((y-x)/t)^(-c-1)*(1+((y-x)/t)^(-c))^(-k-1)/t,0)}
fun01.2 <- function(c,k,t,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,t,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,t,S){ifelse(S!=1,fun01.2(c,k,t,S),fun01.1(c,k,t,S))}
likelihood <- function(z){
	c <- z[1]
	k <- z[2]
	t <- z[3]
	for (i in 1:length(camp5)){
		my.sum=my.sum+fun01(c,k,t,camp5[i])
		} 
	return(my.sum)
	}
result <- optim(c(c=11,k=11,t=11),lower=c(0.4,0.1,0.5),upper=c(100,500,100),likelihood,control = list(fnscale = -1))
# Burr III parameters
result$par
# Burr III DI log likelihood
result$value
# Burr III DI AIC
result$value*-2+6

# code for DI Burr X model
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.1 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,S,x,y){ifelse(y-x>0,2*k*(y-x)*c^(-2)*exp(-((y-x)/c)^(2))*(1-exp(-((y-x)/c)^(2)))^(k-1),0)}
fun01.2 <- function(c,k,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,S){ifelse(S!=1,fun01.2(c,k,S),fun01.1(c,k,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	for (i in 1:length(camp5)){
		my.sum=my.sum+fun01(c,k,camp5[i])
	} 
	return(my.sum)
}
result <- optim(c(c=1,k=1),lower=c(2,0.4),upper=c(10,10),likelihood,control = list(fnscale = -1))
# Burr X parameters
result$par
# Burr X DI log likelihood
result$value
# Burr X DI AIC
result$value*-2+4

# code for DI Burr XII model
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.1 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(c,k,s,S,x,y){ifelse(y-x>0,c*(k-1)*(1+((y-x)/s)^(c))^(-k)*((y-x)/s)^(c-1)/s,0)}
fun01.2 <- function(c,k,s,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(c,k,s,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(c,k,s,S){ifelse(S!=1,fun01.2(c,k,s,S),fun01.1(c,k,s,S))}
likelihood <- function(y){
	c <- y[1]
	k <- y[2]
	s <- y[3]
	for (i in 1:length(camp5)){
		my.sum=my.sum+fun01(c,k,s,camp5[i])
	} 
	return(my.sum)
}
result <- optim(c(c=2.1,k=2.5,s=1.1),lower=c(1,1.15,2),upper=c(9,1500,1500),likelihood,control = list(fnscale = -1))
# Burr XII parameters
result$par
# Burr XII DI log likelihood
result$value
# Burr XII DI AIC
result$value*-2+6

# code for derived Burr model
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.1 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), x, S)$value})},0,1)$value)}
my.sum <- 0
fun0 <- function(a,b,T,S,x,y){ifelse(y-x>0,a*(y-x+b)*exp(a*(T-(y-x))+a*b*log(T/(y-x)))/((y-x)*(1+exp(a*(T-(y-x))+a*b*log(T/(y-x))))^2),0)}
fun01.2 <- function(a,b,T,S){log(integrate(function(x){sapply(x,function(x){integrate(function(y) fun0(a,b,T,S,x,y), S-1, S)$value})},0,1)$value)}
my.sum <- 0
fun01 <- function(a,b,T,S){ifelse(S!=1,fun01.2(a,b,T,S),fun01.1(a,b,T,S))}
likelihood <- function(y){
	a <- y[1]
	b <- y[2]
	T <- y[3]
	for (i in 1:length(camp5)){
		my.sum=my.sum+fun01(a,b,T,camp5[i])
	} 
	return(my.sum)
}
result <- optim(c(a=2.1,b=2.5,T=1.1),lower=c(0.2,0.5,1),upper=c(2,200,5),likelihood,control = list(fnscale = -1))
# derived Burr parameters
result$par
# derived Burr DI log likelihood
result$value
# derived Burr DI AIC
result$value*-2+6


# we now want to plot each dataset with curve fits from normal maximum likelihood methods as well as the DI likelihood method plotted on top as was done for the legionella data
# first need to find parameters of distributions when fitting by normal maximum likelihood methods
# find parameters for anthrax dataset
fitdist(anthrax,"gamma",method="mle")
fitdist(anthrax,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(anthrax,"burr10",method="mle",start=list(c=5,k=5))
fitdist(anthrax,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(anthrax,"dburr",method="mle",start=list(a=0.3,b=100,T=1))
# find parameters for first salmonellosis dataset
fitdist(salm1,"gamma",method="mle")
fitdist(salm1,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(salm1,"burr10",method="mle",start=list(c=5,k=5))
fitdist(salm1,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(salm1,"dburr",method="mle",start=list(a=0.3,b=50,T=1))
# find parameters for second salmonellosis dataset
fitdist(salm2,"gamma",method="mle")
fitdist(salm2,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(salm2,"burr10",method="mle",start=list(c=5,k=5))
fitdist(salm2,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(salm2,"dburr",method="mle",start=list(a=0.3,b=50,T=1))
# find parameters for third salmonellosis dataset
fitdist(salm3,"gamma",method="mle")
fitdist(salm3,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(salm3,"burr10",method="mle",start=list(c=5,k=5))
fitdist(salm3,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(salm3,"dburr",method="mle",start=list(a=0.3,b=100,T=1))
# find parameters for fourth salmonellosis dataset
fitdist(salm4,"gamma",method="mle")
fitdist(salm4,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(salm4,"burr10",method="mle",start=list(c=5,k=5))
fitdist(salm4,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(salm4,"dburr",method="mle",start=list(a=1,b=100,T=10))
# find parameters for first campylobacteriosis dataset
fitdist(camp1,"gamma",method="mle")
fitdist(camp1,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(camp1,"burr10",method="mle",start=list(c=1,k=1))
fitdist(camp1,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(camp1,"dburr",method="mle",start=list(a=1,b=1,T=1))
# find parameters for second campylobacteriosis dataset
fitdist(camp2,"gamma",method="mle")
fitdist(camp2,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(camp2,"burr10",method="mle",start=list(c=1,k=1))
fitdist(camp2,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(camp2,"dburr",method="mle",start=list(a=1,b=1,T=1))
# find parameters for third campylobacteriosis dataset
fitdist(camp3,"gamma",method="mle")
fitdist(camp3,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(camp3,"burr10",method="mle",start=list(c=1,k=1))
fitdist(camp3,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(camp3,"dburr",method="mle",start=list(a=1,b=1,T=1))
# find parameters for fourth campylobacteriosis dataset
fitdist(camp4,"gamma",method="mle")
fitdist(camp4,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(camp4,"burr10",method="mle",start=list(c=1,k=1))
fitdist(camp4,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(camp4,"dburr",method="mle",start=list(a=1,b=1,T=1))
# find parameters for fifth campylobacteriosis dataset
fitdist(camp5,"gamma",method="mle")
fitdist(camp5,"burr3",method="mle",start=list(c=1,k=1,s=1))
fitdist(camp5,"burr10",method="mle",start=list(c=1,k=1))
fitdist(camp5,"burr12",method="mle",start=list(c=1,k=10,s=1))
fitdist(camp5,"dburr",method="mle",start=list(a=1,b=1,T=1))
